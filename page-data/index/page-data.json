{
    "componentChunkName": "component---src-pages-index-js",
    "path": "/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"551e39f5-a130-5e1b-b121-3295e0dfcdad","excerpt":"❗ 오늘의 TIL 생활코딩 JAVA method 강의 수강 1 ~ 9 완강 JAVA method - 1. 수업소개 연관된 코드를 모아서 그룹핑하고 거기에 이름을 붙이면 그것이 함수, 메소드라 한다. 메소드를 이용하면 복잡한 코드를 깔끔하게 정리할 수 있다. 이미 만들어 놓은 메소드를 사용하는 것을 통해서 똑같은 코드를 작성하지 않고 재사용할 수 있게 된다. JAVA method - 3. 메소드의 기본 형식 메소드의 이름으로 코드의 목적을 알릴 수 있고 프로그래밍 언어에서 리팩토링의 핵심적인 요소는 메소드이다. 리팩토링으로 코드를 메소드화 시킬 수 있다. JAVA method - 4. 메소드의 입력 메소드는 약속이다. main이란 메소드가 있어야 자바는 main이란 메소드를 호출해서 우리가 실행하고 싶은 프로그램을 실행시킨다. 매개변수(parameter) : 메소드 바깥쪽에서 메소드를 사용하는 쪽에서 주입한 값을 메소드 안으로 흘려보내 주는 매개자다. 인자(argument): 메소드…","frontmatter":{"categories":"TIL","title":"(22.01.03)오늘의 TIL","date":"January 03, 2022"},"fields":{"slug":"/TIL/22.01.03/"}}},{"node":{"id":"23f74313-064c-5a21-9798-8d34cdd5f100","excerpt":"❗ 오늘의 TIL 생활코딩 JAVA 제어문 강의 수강 1 ~ 8.2 완강 JAVA 제어문 - 5. == VS equals 데이터 타입에는 더 이상 쪼갤 수 없는 원시(primitive) 데이터 타입과 비원시(non primitive) 데이터 타입으로 나눌 수 있는데 원시 데이터 타입은 변수들이 서로 같은 값을 가지고 있으면 그 값이 존재하는 주소를 가리키고 있지만 비원시 데이터 타입은 서로 같은 값을 가지고 있어도 값이 각각의 다른 주소에 저장이 된다. 동등비교연산자는 서로의 값이 같은 주소에 위치하는지 확인하는 연산자이고 .equals() 는 같은 값인지 비교 확인하는 메소드이다. 결론은 서로 같은 값을 가졌는지 확인하고자 한다면 원시 데이터타입은 동등비교연산자를 사용해도 무방하나 비원시 데이터타입은 .equals() 메소드를 사용하는 것이 좋다. 원시데이터 : boolean, int, double, short, long, float, char\r\n비원시데이터 : String, A…","frontmatter":{"categories":"TIL","title":"(21.12.20)오늘의 TIL","date":"December 20, 2021"},"fields":{"slug":"/TIL/21.12.20/"}}},{"node":{"id":"acd12ba4-7172-57b7-ac30-6b3cab76c1c8","excerpt":"❗ 오늘의 TIL 생활코딩 JAVA1 강의 수강 14.1 ~ 15 완강 JAVA1 - 14.6 나의 앱 만들기 - 조건문 조건문을 사용하게 되면 프로그램이 알아서 자신의 상황을 판단해서 어떻게 동작할지를 결정할 수 있기 때문에 하나의 프로그램으로 여러 가지 일을 할 수 있는 폭발적인 효과를 얻을 수 있다. JAVA1 - 14.7 나의 앱 만들기 - 배열 변수가 많아질수록 코드가 복잡해지기 때문에 서로 연관된 데이터를 정리 정돈하는 수단인 배열을 사용하여 코드를 명확하고 보기 쉽게 만들어 줄 수 있다. JAVA1 - 14.8 나의 앱 만들기 - 반복문 반복문은 동일한 코드를 여러 번 반복해서 데이터를 처리해야 할 경우에 사용하기 좋으며 반복문의 장점은 같은 코드를 일일이 여러 번 작성해야 할 것을 단 몇 줄 안에 코드를 작성할 수 있고 반복문 안의 코드 몇 개의 부분만 수정하면 여러 개의 로직이 동시에 수정될 수 있어 코드를 효율적으로 관리 할 수 있다. 배열과 같이 사용하면 폭발적…","frontmatter":{"categories":"TIL","title":"(21.12.17)오늘의 TIL","date":"December 17, 2021"},"fields":{"slug":"/TIL/21.12.17/"}}},{"node":{"id":"f6165483-1f9b-515e-932a-af25b550c12f","excerpt":"❗ 오늘의 TIL 생활코딩 JAVA1 강의 수강 12.1 ~ 13.5 JAVA1 - 12.3 직접 컴파일하고 실행하기 : 컴파일과 실행하기 Windows 환경에서 명령 프롬프트를 이용한 컴파일과 실행하기 program.java 파일이 있는 디렉토리로 변경 명령어 : cd ~ program.java 파일을 컴파일하여 class 파일 만들기 명령어 : javac\r\n예) javac program.java\r\n명령어 dir로 .class 파일이 생긴 것을 확인할 수 있다. 프로그램 실행하기 명령어 : java (=java virtual machine)\r\n예) java program\r\nprogram.class 파일을 찾아 실행 .class 파일의 main 안에 있는 코드를 실행한다. JAVA1 - 12.4 직접 컴파일하고 실행하기 : 라이브러리 이용 라이브러리 : 다른 사람이 사용할 수 있도록 잘 정리 정돈된 프로그램들 JAVA1 - 13.1 자바 문서 보는 법 - API vs UI API …","frontmatter":{"categories":"TIL","title":"(21.12.16)오늘의 TIL","date":"December 16, 2021"},"fields":{"slug":"/TIL/21.12.16/21.12.16/"}}},{"node":{"id":"848a0ee3-96ac-535c-83ba-c0fa195252c3","excerpt":"❗ 오늘의 TIL 생활코딩 JAVA1 강의 수강 7 ~ 11.2 JAVA1 - 8.1 변수의 정의 자바에서 변수를 만들 때는 그 변수가 어떤 데이터 타입을 담을 수 있는지를 명확하게 표현해줘야 한다 각 데이터 타입으로 변수에 정의해 놓는 이유는 오류를 발견하기 쉽거나 줄일 수 있고 변수를 사용할 때마다 데이터 타입을 확인하지 않아도 되기 때문이다. (안정성과 확실성) JAVA1 - 8.2 변수의 효용 변수의 효용 : 특정 값의 수정이 필요할 때 변수 하나만 수정하면 모두 수정이 가능하다. 변수의 이름은 모든 사람이 봐도 그 의미를 바로 파악할 수 있도록 정한다. JAVA1 - 8.3 데이터 타입의 변환(casting) 형 변환(casting) : 데이터 타입을 다른 데이터 타입으로 컨버팅한다. JAVA1 - 9.1 프로그래밍이란 무엇인가? 프로그램 : 시간의 순서에 따라서 어떤 일이 일어나는 것 프로그래밍 : 컴퓨터로 어떠한 일을 순차적으로 실행이 되는 것을 통해서 사람이 잘하지 …","frontmatter":{"categories":"TIL","title":"(21.12.15)오늘의 TIL","date":"December 15, 2021"},"fields":{"slug":"/TIL/21.12.15/"}}},{"node":{"id":"dc7d34d4-e05e-5629-bb67-a30ed49de66b","excerpt":"❗ 오늘의 TIL 생활코딩 JAVA1 강의 수강 1 ~ 6.5 JAVA1 - 4.2 Java의 동작원리 JAVA1_4.2.PNG 사람이 이해할 수 있게 만들어진 컴퓨터 언어 JAVA로 소스 코드를 작성한다.(.java) 확장자가 .java 파일을 이해할 수 있도록 전환하는 작업인 컴파일로 컴퓨터가 이해할 수 있는 언어로 변환한다.(.class) Java Virtual Machine한테 클래스 파일을 실행하라고 시킨다. Java Virtual Machine이 확장자가 클래스인 파일을 읽어서 거기에 적혀있는 대로 컴퓨터를 동작시키게 된다. JAVA1 - 6.2 데이터 타입 데이터의 타입을 구분하는 이유는 데이터의 타입별로 그 타입의 어울리는 연산 방법이 있기 때문에 엄격하게 구분을 한다. 우리가 컴퓨터를 다루는 방법에 어떤 스킬을 쌓아 간다는 것은 두 가지의 중요한 흐름을 가진다. 내가 지금 하고 있는 시스템에는 어떤 종류의 데이터 타입들이 존재하는가를 알아가는 방향 각각의 데이터 타…","frontmatter":{"categories":"TIL","title":"(21.12.14)오늘의 TIL","date":"December 14, 2021"},"fields":{"slug":"/TIL/21.12.14/21.12.14/"}}},{"node":{"id":"0a2f56a6-c5ef-5ba1-89ae-b5acb7cd8449","excerpt":"제 블로그의 테마나 Gatsby의 다른 테마를 활용해서 Github Blog를 만들고 싶은 분들이 계실텐데요! 이런 분들에게 도움을 드리고자 이 글을 쓰게 되었습니다. 잘 안되는 부분이나 궁금한 점을 댓글로 남겨주면 확인해보고 답변 드리도록 하겠습니다! 1. Repository 생성하기 GitHub Blog를 만들려면 Github에 Repository를 생성해야 합니다.  GitHub에 로그인 한 뒤에 우측 상단에 있는 New Repository 버튼을 클릭하면 repository 생성 페이지로 이동하게 됩니다. 이 때 Import a repository 버튼을 클릭합니다.  아래 페이지에 도달하시면 두 가지 정보를 넣어주셔야 하는데, Your old repository’s clone URL에는 사용하고자 하는 gatsby 테마가 있는 repository의 주소를 넣어주시면 됩니다. 제 블로그 테마를 쓰고 싶으신 분들은 여기에 https://github.com/zoomKoding/…","frontmatter":{"categories":"블로그","title":"(참고 자료)Gatsby 테마로 GitHub Blog 만들기","date":"July 06, 2021"},"fields":{"slug":"/Blog/gatsby-github-blog/"}}},{"node":{"id":"c3e36c93-7386-5d98-8004-a2d977ff6455","excerpt":"👋 소개 블로그를 직접 운영하면서 조금씩 그려봤던 이상적인 개발 블로그 테마를 Gatsby를 통해 만들어보게 되었습니다. 이 테마가 블로그를 운영하고자 하시는 분들에게 자신의 이야기를 잘 담을 수 있는 공간이 되었으면 좋겠습니다.🙌 블로그 테마가 맘에 드셨다면 아래 과정을 통해 자신의 블로그를 만들어보시길 바랍니다! 혹시 만드시는 과정에서 궁금하신 점이나 어려움이 있으시다면 이슈를 통해 문의 남겨주세요! 스타는 블로그 테마를 지속적으로 발전시키는데 큰 힘이 됩니다!⭐️ 🚀 시작하기 Github Page나 Netlify 중 원하시는 배포 환경에 따라 다음 과정을 진행하시면 빠르게 블로그를 만드실 수 있습니다. 🦖 GitHub Page로 만들기 깃헙 페이지를 통해 블로그를 만드시다면 아래 글을 참고해주세요! Gatsby 테마로 GitHub Blog 만들기 🔧 Netlify로 만들기 아래 버튼을 활용하면 개인 계정에 를 사용하고 있는 Repository 생성과 Netlify에 배포를 동시…","frontmatter":{"categories":"블로그","title":"(참고 자료)쉽고 빠르게 나만의 개츠비(Gatsby) 블로그 만들기","date":"March 22, 2021"},"fields":{"slug":"/Blog/gatsby-starter-zoomkoding-introduction/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"김동욱","bio":{"role":"개발자","description":["협력을 중시하는","끊임없이 공부하는","문제해결을 즐기는","어디서든 잘 적응하는"],"thumbnail":"me.png"},"social":{"github":"https://github.com/95Donguk","email":"kdy9720@naver.com"}}}}},"pageContext":{}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437","3350743975"]}